<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Storage Layout on S4b03ur's Website</title><link>https://s4bot3ur.github.io/tags/storage-layout/</link><description>Recent content in Storage Layout on S4b03ur's Website</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright © 2024-2025 s4bot3ur. All Rights Reserved.</copyright><lastBuildDate>Mon, 30 Dec 2024 08:39:43 +0530</lastBuildDate><atom:link href="https://s4bot3ur.github.io/tags/storage-layout/index.xml" rel="self" type="application/rss+xml"/><item><title>Guess It</title><link>https://s4bot3ur.github.io/blogs/war-games-ctf/guess-it/</link><pubDate>Mon, 30 Dec 2024 08:39:43 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/war-games-ctf/guess-it/</guid><description><![CDATA[<h1 id="writeup-for-guessit" data-numberify>Writeup for GuessIt<a class="anchor ms-1" href="#writeup-for-guessit"></a></h1>
<ul>
<li>Before diving into this writeup, it’s crucial to have a solid understanding of Foundry, a powerful framework for Ethereum smart contract development. Foundry will be your primary tool for writing, testing, and breaking contracts in this guide.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>Santa Clause has been kidnapped and is kept in a secret dungeon, can u unlock this contract and save him?</p>
<p><strong>Author:</strong> MaanVad3r</p>

<h3 id="the-challenge-and-exploit" data-numberify>The Challenge and Exploit<a class="anchor ms-1" href="#the-challenge-and-exploit"></a></h3>
<p>The below are source contracts</p>]]></description></item><item><title>AlienCodex</title><link>https://s4bot3ur.github.io/blogs/ethernaut/aliencodex/</link><pubDate>Wed, 23 Oct 2024 01:14:27 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/aliencodex/</guid><description><![CDATA[<h1 id="writeup-for-alien-codex" data-numberify>Writeup for Alien Codex<a class="anchor ms-1" href="#writeup-for-alien-codex"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. Each challenge involves deploying a contract and exploiting its vulnerabilities. If you&rsquo;re new to Solidity and haven&rsquo;t deployed a smart contract before, you can learn how to do so using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>Hello hacker, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. Each challenge involves deploying a contract and exploiting its vulnerabilities. If you&rsquo;re new to Solidity and haven&rsquo;t deployed a smart contract before, you can learn how to do so using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>]]></description></item><item><title>Privacy</title><link>https://s4bot3ur.github.io/blogs/ethernaut/privacy/</link><pubDate>Wed, 23 Oct 2024 01:08:16 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/privacy/</guid><description><![CDATA[<h1 id="writeup-for-privacy" data-numberify>Writeup for Privacy<a class="anchor ms-1" href="#writeup-for-privacy"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. For each challenge, a contract will be deployed, and an instance will be provided. Your task is to interact with the contract and exploit its vulnerabilities. Don&rsquo;t worry if you are new to Solidity and have never deployed a smart contract. You can learn how to deploy a contract using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>The creator of this contract was careful enough to protect the sensitive areas of its storage.</p>]]></description></item><item><title>Vault</title><link>https://s4bot3ur.github.io/blogs/ethernaut/vault/</link><pubDate>Wed, 23 Oct 2024 01:02:35 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/vault/</guid><description><![CDATA[<h1 id="writeup-for-vault" data-numberify>Writeup for Vault<a class="anchor ms-1" href="#writeup-for-vault"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. For each challenge, a contract will be deployed and its instance will be provided. Your task is to interact with the contract and exploit its vulnerabilities. Don&rsquo;t worry if you are new to Solidity and have never deployed a smart contract before. You can learn how to deploy a contract using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge" data-numberify>Challenge<a class="anchor ms-1" href="#challenge"></a></h3>
<ul>
<li>The goal of this level is to unlock the vault and pass the challenge!</li>
</ul>

<h3 id="contract-explanation" data-numberify>Contract Explanation<a class="anchor ms-1" href="#contract-explanation"></a></h3>
<details style="margin-bottom: 0;">
    <summary style="cursor: pointer; background-color: #272822; color: #f8f8f2; padding: 0.5em; border-radius: 5px; margin-bottom: 0;">
        Click to view source contract
    </summary>
    <pre style="background-color: #272822; padding: 1em; border-radius: 5px; overflow: auto; margin-top: 0;">
        <code class="mermaid" style="color: #f8f8f2; display: block; margin-top: 0; padding-top: 0;"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kd">contract</span> <span class="nc">Vault</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="kt">bool</span> <span class="k">public</span> <span class="n">locked</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="kt">bytes32</span> <span class="k">private</span> <span class="n">password</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="kd">constructor</span><span class="p">(</span><span class="kt">bytes32</span> <span class="n">_password</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">        <span class="n">locked</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">        <span class="n">password</span> <span class="o">=</span> <span class="n">_password</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="kd">function</span> <span class="nf">unlock</span><span class="p">(</span><span class="kt">bytes32</span> <span class="n">_password</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">password</span> <span class="o">==</span> <span class="n">_password</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">            <span class="n">locked</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></code>
    </pre>
</details>

<p>If you feel like you understand the contract, you can move to the <a href="/blogs/ethernaut/vault/#exploit">exploit</a> part. If you are a beginner, please go through the Contract Explanation as well. It will help you understand Solidity better.</p>]]></description></item></channel></rss>