<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Delegate Call on S4b03ur's Website</title><link>https://s4bot3ur.github.io/tags/delegate-call/</link><description>Recent content in Delegate Call on S4b03ur's Website</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright Â© 2024-2025 s4bot3ur. All Rights Reserved.</copyright><lastBuildDate>Sun, 27 Oct 2024 18:23:27 +0530</lastBuildDate><atom:link href="https://s4bot3ur.github.io/tags/delegate-call/index.xml" rel="self" type="application/rss+xml"/><item><title>NaiveReceiver</title><link>https://s4bot3ur.github.io/blogs/damn-vulnerable-defi/naivereceiver/</link><pubDate>Sun, 27 Oct 2024 18:23:27 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/damn-vulnerable-defi/naivereceiver/</guid><description><![CDATA[<h1 id="writeup-for-naivereceiver" data-numberify>WriteUp for NaiveReceiver<a class="anchor ms-1" href="#writeup-for-naivereceiver"></a></h1>
<p>Hello h4ck3r, welcome to the world of DeFi security! Working through challenges on Damn Vulnerable DeFi will sharpen your skills in identifying and exploiting vulnerabilities within decentralized finance protocols. Each challenge represents a specific DeFi exploit scenario, allowing you to test strategies for attacking smart contracts and understand the underlying mechanics of DeFi. If you&rsquo;re new to Solidity and DeFi principles, You might need to solve Ethernaut first to get an overview of common exploits and vulnerabilities in smart contracts, which will be essential for tackling these challenges.</p>]]></description></item><item><title>PuzzleWallet</title><link>https://s4bot3ur.github.io/blogs/ethernaut/puzzlewallet/</link><pubDate>Wed, 23 Oct 2024 01:18:13 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/puzzlewallet/</guid><description><![CDATA[<h1 id="writeup-for-puzzle-wallet" data-numberify>Writeup for Puzzle Wallet<a class="anchor ms-1" href="#writeup-for-puzzle-wallet"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. Each challenge involves deploying a contract and exploiting its vulnerabilities. If you&rsquo;re new to Solidity and haven&rsquo;t deployed a smart contract before, you can learn how to do so using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>Nowadays, paying for DeFi operations is impossible, fact.</p>]]></description></item><item><title>Preservation</title><link>https://s4bot3ur.github.io/blogs/ethernaut/preservation/</link><pubDate>Wed, 23 Oct 2024 01:11:59 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/preservation/</guid><description><![CDATA[<h1 id="writeup-for-preservation" data-numberify>Writeup for Preservation<a class="anchor ms-1" href="#writeup-for-preservation"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity better. Each challenge involves deploying a contract and exploiting its vulnerabilities. If you&rsquo;re new to Solidity and haven&rsquo;t deployed a smart contract before, you can learn how to do so using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>This contract utilizes a library to store two different times for two different timezones. The constructor creates two instances of the library for each time to be stored.</p>]]></description></item><item><title>Delegation</title><link>https://s4bot3ur.github.io/blogs/ethernaut/delegation/</link><pubDate>Wed, 23 Oct 2024 01:00:56 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/ethernaut/delegation/</guid><description><![CDATA[<h1 id="writeup-for-delegation" data-numberify>Writeup for Delegation<a class="anchor ms-1" href="#writeup-for-delegation"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. Solving the challenges from Ethernaut will help you understand Solidity well. For each challenge, they will deploy the contract and provide us with the instance of that contract. Our task is to interact with the contract and exploit it. Don&rsquo;t worry if you are completely new to Solidity and have never deployed a smart contract before. You can learn how to deploy a contract using Remix <a href="https://youtu.be/3xNFZI8Ste4?si=i3cWN87OpX85zp6k" target="_blank" rel="noopener noreferrer">here<i class="fas fa-external-link-square-alt ms-1"></i></a>.</li>
</ul>

<h3 id="challenge" data-numberify>Challenge<a class="anchor ms-1" href="#challenge"></a></h3>
<ul>
<li>The goal of this level is for you to claim ownership of the instance you are given.</li>
</ul>

<h3 id="contract-explanation" data-numberify>Contract Explanation<a class="anchor ms-1" href="#contract-explanation"></a></h3>
<details style="margin-bottom: 0;">
    <summary style="cursor: pointer; background-color: #272822; color: #f8f8f2; padding: 0.5em; border-radius: 5px; margin-bottom: 0;">
        Click to view source contract
    </summary>
    <pre style="background-color: #272822; padding: 1em; border-radius: 5px; overflow: auto; margin-top: 0;">
        <code class="mermaid" style="color: #f8f8f2; display: block; margin-top: 0; padding-top: 0;"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kd">contract</span> <span class="nc">Delegate</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="kt">address</span> <span class="k">public</span> <span class="n">owner</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="kd">constructor</span><span class="p">(</span><span class="kt">address</span> <span class="n">_owner</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        <span class="n">owner</span> <span class="o">=</span> <span class="n">_owner</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="kd">function</span> <span class="nf">pwn</span><span class="p">()</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="n">owner</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="kd">contract</span> <span class="nc">Delegation</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">    <span class="kt">address</span> <span class="k">public</span> <span class="n">owner</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="n">Delegate</span> <span class="n">delegate</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="kd">constructor</span><span class="p">(</span><span class="kt">address</span> <span class="n">_delegateAddress</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">        <span class="n">delegate</span> <span class="o">=</span> <span class="n">Delegate</span><span class="p">(</span><span class="n">_delegateAddress</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">        <span class="n">owner</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="n">fallback</span><span class="p">()</span> <span class="k">external</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">        <span class="p">(</span><span class="kt">bool</span> <span class="n">result</span><span class="p">,)</span> <span class="o">=</span> <span class="kt">address</span><span class="p">(</span><span class="n">delegate</span><span class="p">).</span><span class="nb">delegatecall</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">data</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">            <span class="nb">this</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></code>
    </pre>
</details>

<p>If you feel like you understand the contract, you can move to the <a href="/blogs/ethernaut/delegation/#exploit">exploit</a> part. If you are a beginner, please go through the Contract Explanation as well. It will help you understand Solidity better.</p>]]></description></item></channel></rss>