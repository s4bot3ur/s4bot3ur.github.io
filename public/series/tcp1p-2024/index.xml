<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>TCP1P-2024 on S4b03ur's Website</title><link>https://s4bot3ur.github.io/series/tcp1p-2024/</link><description>Recent content in TCP1P-2024 on S4b03ur's Website</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright Â© 2024-2024 s4bot3ur. All Rights Reserved.</copyright><lastBuildDate>Wed, 23 Oct 2024 01:34:05 +0530</lastBuildDate><atom:link href="https://s4bot3ur.github.io/series/tcp1p-2024/index.xml" rel="self" type="application/rss+xml"/><item><title>Unsolvable Money Captcha</title><link>https://s4bot3ur.github.io/blogs/tcp1p-2024/unsolvable-money-captcha/</link><pubDate>Wed, 23 Oct 2024 01:34:05 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/tcp1p-2024/unsolvable-money-captcha/</guid><description><![CDATA[<h1 id="writeup-for-unsolveable-money-captcha" data-numberify>Writeup for Unsolveable Money Captcha<a class="anchor ms-1" href="#writeup-for-unsolveable-money-captcha"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. In order to understand this writeup you need to understand foundry.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>Oh no! Hackerika just made a super-duper mysterious block chain thingy!
I&rsquo;m not sure what she&rsquo;s up to, maybe creating a super cool bank app?
But guess what? It seems a bit wobbly because it&rsquo;s asking us to solve a super tricky captcha!
What a silly kid! Let&rsquo;s help her learn how to make a super-duper awesome contract with no head-scratching captcha! XD</p>]]></description></item><item><title>Minecraft Huh</title><link>https://s4bot3ur.github.io/blogs/tcp1p-2024/minecraft-huh/</link><pubDate>Wed, 23 Oct 2024 01:32:27 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/tcp1p-2024/minecraft-huh/</guid><description><![CDATA[<h1 id="writeup-for-minercraft-huh" data-numberify>Writeup for Minercraft Huh<a class="anchor ms-1" href="#writeup-for-minercraft-huh"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. In order to understand this writeup you need to understand foundry.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>Say, everyone knows minecraft right?
The game about mining block after block after block after block&hellip;..</p>
<p>NOTE!
You only need to spawn an instance, no need to press the &ldquo;Flag&rdquo; button.
The isSolved() function will always return false afterall.</p>]]></description></item><item><title>Inju's Gambit</title><link>https://s4bot3ur.github.io/blogs/tcp1p-2024/injus-gambit/</link><pubDate>Wed, 23 Oct 2024 01:31:35 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/tcp1p-2024/injus-gambit/</guid><description><![CDATA[<h1 id="writeup-for-injus-gambit" data-numberify>Writeup for Inju&rsquo;s Gambit<a class="anchor ms-1" href="#writeup-for-injus-gambit"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. In order to understand this writeup you need to understand foundry.</li>
</ul>

<h3 id="key-concepts-to-learn" data-numberify>Key Concepts To Learn<a class="anchor ms-1" href="#key-concepts-to-learn"></a></h3>
<p>When interacting with a smart contract, our interactions are conducted through transactions. Calling a function that modifies the state of a deployed contract is considered a transaction. Changing the state involves altering the values of state variables.</p>]]></description></item><item><title>Executive Problem</title><link>https://s4bot3ur.github.io/blogs/tcp1p-2024/executive-problem/</link><pubDate>Wed, 23 Oct 2024 01:30:42 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/tcp1p-2024/executive-problem/</guid><description><![CDATA[<h1 id="writeup-for-executive-problem" data-numberify>Writeup for Executive Problem<a class="anchor ms-1" href="#writeup-for-executive-problem"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. In order to understand this writeup you need to understand foundry.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>If only we managed to climb high enough, maybe we can dethrone someone?</p>

<h3 id="exploit" data-numberify>Exploit<a class="anchor ms-1" href="#exploit"></a></h3>
<p>The below are source contracts.</p>
<ol>
<li><strong>Setup</strong> contract</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">26</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kn">import</span> <span class="s">&#34;./Crain.sol&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="kn">import</span> <span class="s">&#34;./CrainExecutive.sol&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="kd">contract</span> <span class="nc">Setup</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="n">CrainExecutive</span> <span class="k">public</span> <span class="n">cexe</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="n">Crain</span> <span class="k">public</span> <span class="n">crain</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="kd">constructor</span><span class="p">()</span> <span class="k">payable</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="n">cexe</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CrainExecutive</span><span class="p">{</span><span class="nb">value</span><span class="o">:</span> <span class="mi">50</span> <span class="kc">ether</span><span class="p">}();</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">        <span class="n">crain</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Crain</span><span class="p">(</span><span class="k">payable</span><span class="p">(</span><span class="kt">address</span><span class="p">(</span><span class="n">cexe</span><span class="p">)));</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl">    <span class="kd">function</span> <span class="nf">isSolved</span><span class="p">()</span> <span class="k">public</span> <span class="k">view</span> <span class="k">returns</span><span class="p">(</span><span class="kt">bool</span><span class="p">){</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">        <span class="k">return</span> <span class="n">crain</span><span class="p">.</span><span class="n">crain</span><span class="p">()</span> <span class="o">!=</span> <span class="kt">address</span><span class="p">(</span><span class="nb">this</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ol start="2">
<li><strong>Crain</strong> contract</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">26</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kn">import</span> <span class="s">&#34;./CrainExecutive.sol&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="kd">contract</span> <span class="nc">Crain</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="n">CrainExecutive</span> <span class="k">public</span> <span class="n">ce</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="kt">address</span> <span class="k">public</span> <span class="n">crain</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="kd">modifier</span> <span class="nf">_onlyExecutives</span><span class="p">(){</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span> <span class="o">==</span> <span class="kt">address</span><span class="p">(</span><span class="n">ce</span><span class="p">),</span> <span class="s">&#34;Only Executives can replace&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">        <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">
</span></span><span class="line"><span class="ln">15</span><span class="cl">    <span class="kd">constructor</span><span class="p">(</span><span class="kt">address</span> <span class="k">payable</span> <span class="n">_ce</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="n">ce</span> <span class="o">=</span> <span class="n">CrainExecutive</span><span class="p">(</span><span class="n">_ce</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">        <span class="n">crain</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl">    <span class="kd">function</span> <span class="nf">ascendToCrain</span><span class="p">(</span><span class="kt">address</span> <span class="n">_successor</span><span class="p">)</span> <span class="k">public</span> <span class="n">_onlyExecutives</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">        <span class="n">crain</span> <span class="o">=</span> <span class="n">_successor</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="n">receive</span><span class="p">()</span> <span class="k">external</span> <span class="k">payable</span> <span class="p">{</span> <span class="p">}</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ol start="3">
<li><strong>CrainExecutive</strong> contract</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">26</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kd">contract</span> <span class="nc">CrainExecutive</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="kt">address</span> <span class="k">public</span> <span class="n">owner</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="kt">uint256</span> <span class="k">public</span> <span class="n">totalSupply</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="kt">address</span><span class="p">[]</span> <span class="k">public</span> <span class="n">Executives</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">uint256</span><span class="p">)</span> <span class="k">public</span> <span class="n">balanceOf</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">bool</span><span class="p">)</span> <span class="k">public</span> <span class="n">permissionToExchange</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">bool</span><span class="p">)</span> <span class="k">public</span> <span class="n">hasTakeBonus</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">bool</span><span class="p">)</span> <span class="k">public</span> <span class="n">isEmployee</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">bool</span><span class="p">)</span> <span class="k">public</span> <span class="n">isManager</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">address</span> <span class="o">=&gt;</span> <span class="kt">bool</span><span class="p">)</span> <span class="k">public</span> <span class="n">isExecutive</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl">    <span class="kd">modifier</span> <span class="nf">_onlyOnePerEmployee</span><span class="p">(){</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">hasTakeBonus</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">false</span><span class="p">,</span> <span class="s">&#34;Bonus can only be taken once!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">        <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl">    <span class="kd">modifier</span> <span class="nf">_onlyExecutive</span><span class="p">(){</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">isExecutive</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&#34;Only Higher Ups can access!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">        <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">
</span></span><span class="line"><span class="ln">27</span><span class="cl">    <span class="kd">modifier</span> <span class="nf">_onlyManager</span><span class="p">(){</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">isManager</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&#34;Only Higher Ups can access!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">29</span><span class="cl">        <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">
</span></span><span class="line"><span class="ln">32</span><span class="cl">    <span class="kd">modifier</span> <span class="nf">_onlyEmployee</span><span class="p">(){</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">isEmployee</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&#34;Only Employee can exchange!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">        <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">36</span><span class="cl">
</span></span><span class="line"><span class="ln">37</span><span class="cl">    <span class="kd">constructor</span><span class="p">()</span> <span class="k">payable</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">38</span><span class="cl">        <span class="n">owner</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl">        <span class="n">totalSupply</span> <span class="o">=</span> <span class="mi">50</span> <span class="kc">ether</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">=</span> <span class="mi">25</span> <span class="kc">ether</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">42</span><span class="cl">
</span></span><span class="line"><span class="ln">43</span><span class="cl">    <span class="kd">function</span> <span class="nf">claimStartingBonus</span><span class="p">()</span> <span class="k">public</span> <span class="n">_onlyOnePerEmployee</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">44</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="n">owner</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span><span class="n">e18</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">45</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="n">e18</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">46</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">47</span><span class="cl">
</span></span><span class="line"><span class="ln">48</span><span class="cl">    <span class="kd">function</span> <span class="nf">becomeEmployee</span><span class="p">()</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">49</span><span class="cl">        <span class="n">isEmployee</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">50</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">51</span><span class="cl">
</span></span><span class="line"><span class="ln">52</span><span class="cl">    <span class="kd">function</span> <span class="nf">becomeManager</span><span class="p">()</span> <span class="k">public</span> <span class="n">_onlyEmployee</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">53</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="kc">ether</span><span class="p">,</span> <span class="s">&#34;Must have at least 1 ether&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">54</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">isEmployee</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&#34;Only Employee can be promoted&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">55</span><span class="cl">        <span class="n">isManager</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">56</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">57</span><span class="cl">
</span></span><span class="line"><span class="ln">58</span><span class="cl">    <span class="kd">function</span> <span class="nf">becomeExecutive</span><span class="p">()</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">59</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">isEmployee</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span> <span class="o">&amp;&amp;</span> <span class="n">isManager</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">60</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">5</span> <span class="kc">ether</span><span class="p">,</span> <span class="s">&#34;Must be that Rich to become an Executive&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">61</span><span class="cl">        <span class="n">isExecutive</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">62</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">63</span><span class="cl">
</span></span><span class="line"><span class="ln">64</span><span class="cl">    <span class="kd">function</span> <span class="nf">buyCredit</span><span class="p">()</span> <span class="k">public</span> <span class="k">payable</span> <span class="n">_onlyEmployee</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">65</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">value</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="kc">ether</span><span class="p">,</span> <span class="s">&#34;Minimum is 1 Ether&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">66</span><span class="cl">        <span class="kt">uint256</span> <span class="n">totalBought</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">value</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">67</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">+=</span> <span class="n">totalBought</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">68</span><span class="cl">        <span class="n">totalSupply</span> <span class="o">+=</span> <span class="n">totalBought</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">69</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">70</span><span class="cl">
</span></span><span class="line"><span class="ln">71</span><span class="cl">    <span class="kd">function</span> <span class="nf">sellCredit</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">_amount</span><span class="p">)</span> <span class="k">public</span> <span class="n">_onlyEmployee</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">72</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">-</span> <span class="n">_amount</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#34;Not Enough Credit&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">73</span><span class="cl">        <span class="kt">uint256</span> <span class="n">totalSold</span> <span class="o">=</span> <span class="n">_amount</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">74</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">-=</span> <span class="n">totalSold</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">75</span><span class="cl">        <span class="n">totalSupply</span> <span class="o">-=</span> <span class="n">totalSold</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">76</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">77</span><span class="cl">
</span></span><span class="line"><span class="ln">78</span><span class="cl">    <span class="kd">function</span> <span class="nf">transfer</span><span class="p">(</span><span class="kt">address</span> <span class="n">to</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_amount</span><span class="p">,</span> <span class="kt">bytes</span> <span class="k">memory</span> <span class="n">_message</span><span class="p">)</span> <span class="k">public</span> <span class="n">_onlyExecutive</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">79</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">to</span> <span class="o">!=</span> <span class="kt">address</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="s">&#34;Invalid Recipient&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">80</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">-</span> <span class="n">_amount</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#34;Not enough Credit&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">81</span><span class="cl">        <span class="kt">uint256</span> <span class="n">totalSent</span> <span class="o">=</span> <span class="n">_amount</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">82</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">]</span> <span class="o">-=</span> <span class="n">totalSent</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">83</span><span class="cl">        <span class="n">balanceOf</span><span class="p">[</span><span class="n">to</span><span class="p">]</span> <span class="o">+=</span> <span class="n">totalSent</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">84</span><span class="cl">        <span class="p">(</span><span class="kt">bool</span> <span class="n">transfered</span><span class="p">,</span> <span class="p">)</span> <span class="o">=</span> <span class="k">payable</span><span class="p">(</span><span class="n">to</span><span class="p">).</span><span class="nb">call</span><span class="p">{</span><span class="nb">value</span><span class="o">:</span> <span class="n">_amount</span><span class="p">}(</span><span class="nb">abi</span><span class="p">.</span><span class="nb">encodePacked</span><span class="p">(</span><span class="n">_message</span><span class="p">));</span>
</span></span><span class="line"><span class="ln">85</span><span class="cl">        <span class="nb">require</span><span class="p">(</span><span class="n">transfered</span><span class="p">,</span> <span class="s">&#34;Failed to Transfer Credit!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">86</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">87</span><span class="cl">
</span></span><span class="line"><span class="ln">88</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>In this challenge our task is make <code>isSolved()</code> function return true.</p>]]></description></item><item><title>Baby ERC 20</title><link>https://s4bot3ur.github.io/blogs/tcp1p-2024/baby-erc-20/</link><pubDate>Wed, 23 Oct 2024 01:29:00 +0530</pubDate><guid>https://s4bot3ur.github.io/blogs/tcp1p-2024/baby-erc-20/</guid><description><![CDATA[<h1 id="writeup-for-baby-erc-20" data-numberify>Writeup for BABY ERC-20<a class="anchor ms-1" href="#writeup-for-baby-erc-20"></a></h1>
<ul>
<li>Hello h4ck3r, welcome to the world of smart contract hacking. In order to understand this writeup you need to understand foundry.</li>
</ul>

<h3 id="challenge-description" data-numberify>Challenge Description<a class="anchor ms-1" href="#challenge-description"></a></h3>
<p>No Description given</p>

<h3 id="key-concepts-to-learn" data-numberify>Key Concepts to Learn<a class="anchor ms-1" href="#key-concepts-to-learn"></a></h3>
<p>In order to solve this challenge we need to understand <code>overflows</code> and <code>underflows</code> in solidity.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="c1"></span><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">
</span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="kd">contract</span> <span class="nc">overflow_underflow</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="kt">uint8</span> <span class="n">overflow</span><span class="o">=</span><span class="mi">255</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="kt">uint8</span> <span class="n">underflow</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="kd">function</span> <span class="nf">increment</span><span class="p">()</span><span class="k">public</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">        <span class="n">overflow</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">    <span class="kd">function</span> <span class="nf">decrement</span><span class="p">()</span><span class="k">public</span><span class="p">{</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">        <span class="n">underflow</span><span class="o">--</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">
</span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The above contract is a good example to understand overflows and underflows. The state variable <code>overflow</code> is set to 255, and the state variable <code>underflow</code> is set to 0.</p>]]></description></item></channel></rss>